// Copyright 2022 Saferwall. All rights reserved.
// Use of this source code is governed by Apache v2 license
// license that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.0
// source: proto/agent.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DeployRequest message contains a zip package that includes all
// necessery files.
type DeployRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Zip file containing the sandbox app with its dependencies.
	Package []byte `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	// Destination path where to deploy the package.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *DeployRequest) Reset() {
	*x = DeployRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployRequest) ProtoMessage() {}

func (x *DeployRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployRequest.ProtoReflect.Descriptor instead.
func (*DeployRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{0}
}

func (x *DeployRequest) GetPackage() []byte {
	if x != nil {
		return x.Package
	}
	return nil
}

func (x *DeployRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// DeployReply contains the version of the package that was deployed.
type DeployReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeployReply) Reset() {
	*x = DeployReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployReply) ProtoMessage() {}

func (x *DeployReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployReply.ProtoReflect.Descriptor instead.
func (*DeployReply) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{1}
}

func (x *DeployReply) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// The request message containing a sample for analysis.
type AnalyzeFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The binary file content.
	Binary []byte `protobuf:"bytes,1,opt,name=binary,proto3" json:"binary,omitempty"`
	// Configuration used to run the binary.
	// This is basically a JSON serialized byte array that contains
	// the configuration used to run the malware.
	// Example of fields that it contains is:
	//  - Full path to where the binary should be dropped in the guest.
	//  - Arguments used to execute the binary.
	//  - Timeout in seconds for how long to run the binary.
	//  - Country used to tunnel the connections.
	//  - The SHA256 hash of the binary.
	//  - Whether mem dumps should be taken.
	//  - etc ...
	Config []byte `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *AnalyzeFileRequest) Reset() {
	*x = AnalyzeFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeFileRequest) ProtoMessage() {}

func (x *AnalyzeFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeFileRequest.ProtoReflect.Descriptor instead.
func (*AnalyzeFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{2}
}

func (x *AnalyzeFileRequest) GetBinary() []byte {
	if x != nil {
		return x.Binary
	}
	return nil
}

func (x *AnalyzeFileRequest) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

// The response message containing the analysis results.
type AnalyzeFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// APIs log produced by the sandbox in JSON Lines;
	Apitrace           []byte                         `protobuf:"bytes,1,opt,name=apitrace,proto3" json:"apitrace,omitempty"`
	Screenshots        []*AnalyzeFileReply_Screenshot `protobuf:"bytes,2,rep,name=screenshots,proto3" json:"screenshots,omitempty"`
	Memdumps           []*AnalyzeFileReply_Memdump    `protobuf:"bytes,3,rep,name=memdumps,proto3" json:"memdumps,omitempty"`
	CollectedArtifacts []*AnalyzeFileReply_Artifact   `protobuf:"bytes,4,rep,name=collected_artifacts,json=collectedArtifacts,proto3" json:"collected_artifacts,omitempty"`
	// gRPC server logs.
	Serverlog []byte `protobuf:"bytes,5,opt,name=serverlog,proto3" json:"serverlog,omitempty"`
	// controller.exe logs.
	Controllerlog []byte `protobuf:"bytes,6,opt,name=controllerlog,proto3" json:"controllerlog,omitempty"`
}

func (x *AnalyzeFileReply) Reset() {
	*x = AnalyzeFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeFileReply) ProtoMessage() {}

func (x *AnalyzeFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeFileReply.ProtoReflect.Descriptor instead.
func (*AnalyzeFileReply) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{3}
}

func (x *AnalyzeFileReply) GetApitrace() []byte {
	if x != nil {
		return x.Apitrace
	}
	return nil
}

func (x *AnalyzeFileReply) GetScreenshots() []*AnalyzeFileReply_Screenshot {
	if x != nil {
		return x.Screenshots
	}
	return nil
}

func (x *AnalyzeFileReply) GetMemdumps() []*AnalyzeFileReply_Memdump {
	if x != nil {
		return x.Memdumps
	}
	return nil
}

func (x *AnalyzeFileReply) GetCollectedArtifacts() []*AnalyzeFileReply_Artifact {
	if x != nil {
		return x.CollectedArtifacts
	}
	return nil
}

func (x *AnalyzeFileReply) GetServerlog() []byte {
	if x != nil {
		return x.Serverlog
	}
	return nil
}

func (x *AnalyzeFileReply) GetControllerlog() []byte {
	if x != nil {
		return x.Controllerlog
	}
	return nil
}

// Screenshots collected during the analysis.
type AnalyzeFileReply_Screenshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id represents an identifier to keep screenshots order.
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// content contains the image data.
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *AnalyzeFileReply_Screenshot) Reset() {
	*x = AnalyzeFileReply_Screenshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeFileReply_Screenshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeFileReply_Screenshot) ProtoMessage() {}

func (x *AnalyzeFileReply_Screenshot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeFileReply_Screenshot.ProtoReflect.Descriptor instead.
func (*AnalyzeFileReply_Screenshot) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{3, 0}
}

func (x *AnalyzeFileReply_Screenshot) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AnalyzeFileReply_Screenshot) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

// (Optional) memory dumps taken during the analysis.
type AnalyzeFileReply_Memdump struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string represents metadata about the dump:
	// i.e = 8DC.memory.400000.mshta.exe.inet
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// content contains the memory dump data.
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *AnalyzeFileReply_Memdump) Reset() {
	*x = AnalyzeFileReply_Memdump{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeFileReply_Memdump) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeFileReply_Memdump) ProtoMessage() {}

func (x *AnalyzeFileReply_Memdump) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeFileReply_Memdump.ProtoReflect.Descriptor instead.
func (*AnalyzeFileReply_Memdump) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{3, 1}
}

func (x *AnalyzeFileReply_Memdump) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AnalyzeFileReply_Memdump) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

// (Optional) arfifacts like created files during the analysis.
type AnalyzeFileReply_Artifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string represents metadata about the artifact:
	// i.e = deleted-file-%appdata%/explorer.exe
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// content contains the memory dump data.
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *AnalyzeFileReply_Artifact) Reset() {
	*x = AnalyzeFileReply_Artifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeFileReply_Artifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeFileReply_Artifact) ProtoMessage() {}

func (x *AnalyzeFileReply_Artifact) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeFileReply_Artifact.ProtoReflect.Descriptor instead.
func (*AnalyzeFileReply_Artifact) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{3, 2}
}

func (x *AnalyzeFileReply_Artifact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AnalyzeFileReply_Artifact) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

var File_proto_agent_proto protoreflect.FileDescriptor

var file_proto_agent_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x22, 0x3d, 0x0a, 0x0d,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x27, 0x0a, 0x0b, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x12, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xf9, 0x03, 0x0a, 0x10, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x61, 0x70, 0x69, 0x74, 0x72, 0x61, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x7a, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68,
	0x6f, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x64, 0x75, 0x6d, 0x70, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x4d, 0x65, 0x6d, 0x64, 0x75, 0x6d, 0x70, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x64, 0x75, 0x6d,
	0x70, 0x73, 0x12, 0x53, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x52, 0x12, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x6c, 0x6f, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x6c, 0x6f, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x6c, 0x6f, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x6c, 0x6f, 0x67, 0x1a, 0x36, 0x0a, 0x0a, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x1a, 0x37, 0x0a, 0x07, 0x4d, 0x65, 0x6d, 0x64, 0x75, 0x6d, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x38, 0x0a, 0x08,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x32, 0x86, 0x01, 0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x12, 0x38, 0x0a, 0x06, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x16, 0x2e, 0x73, 0x61, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x07, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x7a, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x7a, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42,
	0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61,
	0x66, 0x65, 0x72, 0x77, 0x61, 0x6c, 0x6c, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_agent_proto_rawDescOnce sync.Once
	file_proto_agent_proto_rawDescData = file_proto_agent_proto_rawDesc
)

func file_proto_agent_proto_rawDescGZIP() []byte {
	file_proto_agent_proto_rawDescOnce.Do(func() {
		file_proto_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_agent_proto_rawDescData)
	})
	return file_proto_agent_proto_rawDescData
}

var file_proto_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_agent_proto_goTypes = []interface{}{
	(*DeployRequest)(nil),               // 0: sandbox.DeployRequest
	(*DeployReply)(nil),                 // 1: sandbox.DeployReply
	(*AnalyzeFileRequest)(nil),          // 2: sandbox.AnalyzeFileRequest
	(*AnalyzeFileReply)(nil),            // 3: sandbox.AnalyzeFileReply
	(*AnalyzeFileReply_Screenshot)(nil), // 4: sandbox.AnalyzeFileReply.Screenshot
	(*AnalyzeFileReply_Memdump)(nil),    // 5: sandbox.AnalyzeFileReply.Memdump
	(*AnalyzeFileReply_Artifact)(nil),   // 6: sandbox.AnalyzeFileReply.Artifact
}
var file_proto_agent_proto_depIdxs = []int32{
	4, // 0: sandbox.AnalyzeFileReply.screenshots:type_name -> sandbox.AnalyzeFileReply.Screenshot
	5, // 1: sandbox.AnalyzeFileReply.memdumps:type_name -> sandbox.AnalyzeFileReply.Memdump
	6, // 2: sandbox.AnalyzeFileReply.collected_artifacts:type_name -> sandbox.AnalyzeFileReply.Artifact
	0, // 3: sandbox.Agent.Deploy:input_type -> sandbox.DeployRequest
	2, // 4: sandbox.Agent.Analyze:input_type -> sandbox.AnalyzeFileRequest
	1, // 5: sandbox.Agent.Deploy:output_type -> sandbox.DeployReply
	3, // 6: sandbox.Agent.Analyze:output_type -> sandbox.AnalyzeFileReply
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_agent_proto_init() }
func file_proto_agent_proto_init() {
	if File_proto_agent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_agent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeFileReply_Screenshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeFileReply_Memdump); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeFileReply_Artifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_agent_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_agent_proto_goTypes,
		DependencyIndexes: file_proto_agent_proto_depIdxs,
		MessageInfos:      file_proto_agent_proto_msgTypes,
	}.Build()
	File_proto_agent_proto = out.File
	file_proto_agent_proto_rawDesc = nil
	file_proto_agent_proto_goTypes = nil
	file_proto_agent_proto_depIdxs = nil
}
