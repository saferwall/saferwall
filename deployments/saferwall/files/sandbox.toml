# Log level verbosity.
log_level = "{{ .Values.sandbox.logLevel }}"
# Shared volume between all microservices.
shared_volume = "{{ .Values.saferwall.storage.sharedVolume }}"
# Text file contaning a list of english words.
english_words = "words.txt"
# Path to the yara rules directory. The content of the directory
# should include an index.yara that include all other yara rules.
yara_rules = "./rules"

[agent]
# Destinary directory inside the guest where the agent is deployed.
dest_dir = "C:\\saferwall\\"
# The sandbox binary components.
package_name = "/saferwall/package.zip"

[virt_manager]
# Specify whether a remote or local session.
# Local session uses "unix" and ignore the fields below.
network = "{{ .Values.sandbox.virtManager.network }}"
# IP address of the host running libvirt RPC server.
address = "{{ .Values.sandbox.virtManager.address }}"
# Port number of the SSH server.
port = "{{ .Values.sandbox.virtManager.port }}"
# The username used when connecting via a remote SSH conn.
user = "{{ .Values.sandbox.virtManager.user }}"
# File path of the SSH private key when using remote transport.
ssh_key_path = "{{ .Values.sandbox.virtManager.sshKeyPath }}"
# Snapshot name to restore to to go back to a clean state.
snapshot_name = "{{ .Values.sandbox.virtManager.snapshotName }}"

[producer]
# The data source name (DSN) for connecting to the broker server (NSQD).
nsqd = '{{ printf "%s-%s" .Release.Name .Values.nsq.nsqd.name }}:4150'
# Topic name to produce to.
topic = "topic-aggregator"

[consumer]
# The data source name (DSN) for connecting to the service discovery server
# (NSQLookupD).
lookupds = [
{{ $lookupdFullName := printf "%s-%s" .Release.Name .Values.nsq.nsqlookupd.name -}}
{{ range $i, $e := until (atoi (printf "%d" (int64 .Values.nsq.nsqlookupd.replicaCount))) -}}
    "{{ $lookupdFullName }}-{{ $i }}.{{ $lookupdFullName }}:4161",
{{- end }}]
# Topic name to consume from.
topic = "topic-sandbox"
# Channel name used in conjunction with topic name.
channel = "chan-sandbox"
