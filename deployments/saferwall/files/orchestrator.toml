# Log level verbosity.
log_level = "{{ .Values.orchestrator.logLevel }}"
# Shared volume between all microservices.
shared_volume = "{{ .Values.saferwall.storage.sharedVolume }}"

[producer]
# The data source name (DSN) for connecting to the broker server (NSQD).
nsqd = '{{ printf "%s-%s" .Release.Name .Values.nsq.nsqd.name }}:4150'

[consumer]
# The data source name (DSN) for connecting to the service discovery server
# (NSQLookupD).
lookupds = [
{{ $lookupdFullName := printf "%s-%s" .Release.Name .Values.nsq.nsqlookupd.name -}}
{{ range $i, $e := until (atoi (printf "%d" (int64 .Values.nsq.nsqlookupd.replicaCount))) -}}
    "{{ $lookupdFullName }}-{{ $i }}.{{ $lookupdFullName }}:4161",
{{- end }}]
# Topic name to consume from.
topic = "topic-filescan"
# Channel name used in conjunction with topic name.
channel = "chan-filescan"
# The number of concurrent workers to process the jobs.
concurrency = {{ .Values.orchestrator.concurrency }}

[storage]
# Kind of deployment used to host object storage.
deployment_kind = "{{ .Values.saferwall.storage.deploymentKind }}" # Deployement kind, possible values: aws, minio, local.
# Bucket name where samples are stored.
bucket = "{{ .Values.webapis.storage.filesContainer }}"
    {{ if eq .Values.saferwall.storage.deploymentKind "aws"  }}
    [storage.s3]
    region = "{{ .Values.saferwall.s3.region }}" # AWS region.
    access_key = "{{ .Values.saferwall.s3.accessKey }}" # AWS Secret Access Key.
    secret_key = "{{ .Values.saferwall.s3.secretKey }}" # AWS Access key ID.
    {{ else if eq .Values.saferwall.storage.deploymentKind "minio" }}
    [storage.minio]
    endpoint = '{{ printf "%s-minio" .Release.Name }}:9000' # MinIO endpoint.
    region = "{{ .Values.saferwall.minio.region }}" # MinIO region.
    access_key = "{{ .Values.saferwall.minio.accessKey }}" # MinIO Secret Access Key.
    secret_key = "{{ .Values.saferwall.minio.secretKey }}" # MinIO Access key ID.
    {{ end }}
